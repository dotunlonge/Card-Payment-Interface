import React, { useState, useRef, useEffect } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head'
import Image from 'next/image'

const TimeDisplay: React.FC = () => {
  const [time, setTime] = useState<string>('00:00');

  useEffect(() => {
    const interval = setInterval(() => {
      const date = new Date();
      const hours = date.getHours().toString().padStart(2, '0');
      const minutes = date.getMinutes().toString().padStart(2, '0');
      setTime(`${hours}:${minutes}`);
    }, 1000);

    return () => {
      clearInterval(interval);
    };
  }, []);

  return (
    <div className='xs-12 md-6'>
      <div className="f-r">
        <p className="time">
          <span>{time[0]}</span>
          <span>{time[1]}</span>
          :
          <span>{time[3]}</span>
          <span>{time[4]}</span>
        </p>
      </div>
    </div>
  );
};

const Home: NextPage = () => {

 const [cardType, setCardType] = useState<string>('credit-card');
 const inputRefs = useRef<Array<HTMLInputElement | null>>([]);
 const [cardNumber, setCardNumber] = useState<{ [key: string]: string }>({
   'input-1': '',
   'input-2': '',
   'input-3': '',
   'input-4': '',
 });
 const [cvvNumber, setCvvNumber] = useState<string>('327');
 const [expiryMonth, setExpiryMonth] = useState<number | string>('09');
 const [expiryYear, setExpiryYear] = useState<number | string>('22');
 const [password, setPassword] = useState<string>('');

 // Function to detect the card type based on the input
 const detectCardType = (input: string) => {
   const cardTypes = [
     {
       type: 'visa',
       pattern: /^4/,
     },
     {
       type: 'mastercard',
       pattern: /^5[1-5]/,
     },
     {
       type: 'amex',
       pattern: /^3[47]/,
     },
     {
       type: 'discover',
       pattern: /^6(?:011|5)/,
     },
     // Add more card types and patterns as needed
   ];

   for (const card of cardTypes) {
     if (card.pattern.test(input)) {
       return card.type;
     }
   }

   return 'credit-card';
 };

 // Event handler for card number input change
 const handleCardNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {
   const { name, value } = e.target;
   if (name === 'input-1') setCardType(detectCardType(value));
   handleInputChange(e);
 };

 // Event handler for general input change
 const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
   const { name, value } = e.target;
   const input = value.replace(/\D/g, '').slice(0, 4); // Limit the input to 4 characters
   setCardNumber((prevCardNumber) => ({ ...prevCardNumber, [name]: input }));
   if (input.length === 4) focusNextInput(e.target);
 };

 // Function to focus on the next input
  const focusNextInput = (currentInput: HTMLInputElement | null) => {
   if (currentInput) {
     const { maxLength, value } = currentInput;
     if (value.length === Number(maxLength)) {
       const nextInput = currentInput.nextElementSibling as HTMLInputElement;
       if (nextInput) nextInput.focus();
     }
   }
  };

  useEffect(() => {
   inputRefs.current = inputRefs.current.slice(0, 4); // Limit the number of input refs to 4
  }, []);

  const handlePayment = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    // Process the payment using the form data
    const formData = {
      cardNumber,
      cvvNumber,
      expiryMonth,
      expiryYear,
      password,
    };
    console.log('Form Data:', formData);
  };

  const handleCVVNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const input = e.target.value.slice(0, 3); // Limit the input to the maximum card cvv number length
    setCvvNumber(input);
  };

  const handleMonthChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const input = e.target.value.slice(0, 2);
    setExpiryMonth(input.toString().padStart(2, '0'));
  };

  const handleYearChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const input = e.target.value.slice(0, 2);
    setExpiryYear(input.toString().padStart(2, '0'));
  };

  return (
    <>
      <Head>
        <title>AceCoinPay</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="xs-12">
        <div className="xs-12 md-8">

          <div className='xs-12 md-6'>
            <div className="f-l logo-part">
              <img src="/logo.png" alt="logo" id="logo"/><h2>AceCoinPay</h2>
            </div>
          </div>

        <TimeDisplay/>

          <form onSubmit={handlePayment}>

            <div className='credit-card xs-12'>
              <div className='c-n'>
                <label htmlFor="cardNumber">Card Number</label>
                <span>Enter the 16-digit card number on the card</span>
              </div>
                <button className="edit">
                  <img src="/pen.png" alt="pen" className="pen"/>
                  Edit
                </button>
            </div>

            <div className="form-control xs-12 with-correct">
              <div className="xs-2 sm-1">
                <img alt="card" src={`/${cardType}.png`} className="card-image" />
              </div>
              <div className="xs-9 sm-6 fields">
              <input
                ref={(ref) => (inputRefs.current[0] = ref)}
                type="number"
                className="xs-3"
                maxLength={4}
                placeholder="2412"
                value={cardNumber['input-1']}
                onChange={handleCardNumberChange}
                name="input-1"
                />
                <span>-</span>
                <input
                  ref={(ref) => (inputRefs.current[1] = ref)}
                  type="number"
                  className="xs-3"
                  maxLength={4}
                  placeholder="7512"
                  value={cardNumber['input-2']}
                  onChange={handleInputChange}
                  name="input-2"
                />
                <span>-</span>
                <input
                  ref={(ref) => (inputRefs.current[2] = ref)}
                  type="number"
                  className="xs-3"
                  maxLength={4}
                  placeholder="3412"
                  value={cardNumber['input-3']}
                  onChange={handleInputChange}
                  name="input-3"
                />
                <span>-</span>
                <input
                  ref={(ref) => (inputRefs.current[3] = ref)}
                  type="number"
                  className="xs-3"
                  maxLength={4}
                  placeholder="3456"
                  value={cardNumber['input-4']}
                  onChange={handleInputChange}
                  name="input-4"
                />
              </div>
                <img src="/correct.png" alt="check" className="correct" />
            </div>

            <div className="form-control xs-12">
              <div className="xs-12 md-6">
                <label htmlFor="cvvNumber">CVV Number</label>
                <span>Enter the 3 or 4 digit number on the card</span>
              </div>

              <div className="xs-12 md-6 with-dial">
                  <input
                    type="number"
                    placeholder={cvvNumber.toString()}
                    className="xs-12"
                    id="cvvNumber"
                    min={1}
                    maxLength={3}
                    value={cvvNumber.toString()}
                    onChange={handleCVVNumberChange}
                  />
                  <img src="/dial.png" alt='dial' className="dial" />
              </div>
            </div>

            <div className="form-control xs-12">
              <div className="xs-12 md-6">
                <label htmlFor="">Expiry Date</label>
                <span>Enter the expiration date of the card</span>
              </div>

              <div className="xs-12 md-6" style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <input
                  type="number"
                  placeholder={"09"}
                  className="xs-5"
                  max={12}
                  min={1}
                  value={expiryMonth.toString()}
                  onChange={handleMonthChange}
                  id="month"
                />
                <span className="xs-2 t-c">/</span>
                <input
                  type="number"
                  placeholder={"22"}
                  className="xs-5"
                  min={1}
                  value={expiryYear.toString()}
                  onChange={handleYearChange}
                  id="year"
                />
              </div>
            </div>

            <div className="form-control xs-12">
              <div className="xs-12 md-6">
                <label htmlFor="">Password</label>
                <span>Enter your dynamic password</span>
              </div>

              <div className="xs-12 md-6 with-dial">
              <input
                type="password"
                placeholder={"xxxxxxxxx"}
                className="xs-12"
                id="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                />
                <img src="/dial.png" alt='dial' className="dial" />
              </div>
            </div>

            <div className="form-control xs-12">
              <button className="xs-12 pay-now">Pay Now</button>
            </div>
          </form>
        </div>

        <div className="xs-12 md-3 md-off-1 right">
          <div className='blue'/>
          <div className="card-holder">
            <div className='backcard-holder'/>
            <div className="card">

              <div className="scannable-part">
                  <img src="/chip.png" alt="reader" id="reader"/>
                  <img src="/full-signal.png" alt="signal" id="signal"/>
              </div>

              <div className="card-content xs-12">

                <div className="top">
                  <p className="one">Jonathan Michael</p>
                  <p className="two"><span>●●●●</span> {cardNumber["input-4"]}</p>
                </div>

                <div className="bottom">
                 <p>{expiryMonth}/{expiryYear}</p>
                 <img src="/mastercard.png" alt="mastercard" />
               </div>

              </div>

            </div>

            <div className="payment-info xs-12">

              <div className="info-control xs-12 ">

                <div className="info xs-12">
                  <p className='xs-12 md-6 l'>Company</p>
                  <p className='xs-12 md-6 t-r b'><img src="/apple.png" alt="apple"/><span>Apple</span></p>
                </div>

                <div className="info xs-12">
                  <p className='xs-12 md-6 l'>Order Number</p>
                  <p className='xs-12 md-6 t-r b'>1266201</p>
                </div>

                <div className="info xs-12">
                  <p className='xs-12 md-6 l'>Product</p>
                  <p className='xs-12 md-6 t-r b'>Macbook Air</p>
                </div>

                <div className="info xs-12">
                  <p className='xs-12 md-6 l'>VAT (20%)</p>
                  <p className='xs-12 md-6 t-r b'>$100.00</p>
                </div>

              </div>

            <div>

          </div>
            </div>

            <div className='xs-12 total'>
              <button className="circle"/>
              <div className="bar"/>
              <button className="circle r"/>
            </div>

            <div className="xs-12 to-pay">
              <div className='xs-9'>
                <label>You have to Pay</label>
                <div className="amount">
                  <h2>549.<span>99</span></h2>
                  <span className="cur">USD</span>
                </div>
              </div>
              <div className="xs-3">
                <img src="/bill.png" alt="bill" className="bill"/>
              </div>
            </div>

          </div>
        </div>
      </main>

    </>
  )
}

export default Home;
